const { expect } = require('./extendedChai')

const testRPCURL = require('./testrpc')

describe('caver.utils.isHumanReadableString', (done) => {
  it('Should return true if the argument is valid human-readble string', () => {
    var Caver = require('../index.js')
    const caver = new Caver(testRPCURL)

    const humanReadableString1 = 'brandon.klaytn'
    const humanReadableString2 = 'luman.klaytn'
    const humanReadableString3 = 'satoshi.klaytn'

    expect(caver.utils.isHumanReadableString(humanReadableString1)).to.true
    expect(caver.utils.isHumanReadableString(humanReadableString2)).to.true
    expect(caver.utils.isHumanReadableString(humanReadableString3)).to.true
  })
  
  it('Should return false if the length of argument is invalid', () => {
    var Caver = require('../index.js')
    const caver = new Caver(testRPCURL)

    const invalidHumanReadableString1 = 'brandonbrandon.klaytn'
    const invalidHumanReadableString2 = 'lum.klaytn'
    const invalidHumanReadableString3 = 'satoshisatoshi.klaytn'

    const lengthError = new Error('The length of human readable string should be greater than or equal to 4 and less than or equal to 12.')

    expect(caver.utils.isHumanReadableString(invalidHumanReadableString1)).to.false
    expect(caver.utils.isHumanReadableString(invalidHumanReadableString2)).to.false
    expect(caver.utils.isHumanReadableString(invalidHumanReadableString3)).to.false
  })

  it('Should return false if the argument does not contain .klaytn suffix', () => {
    var Caver = require('../index.js')
    const caver = new Caver(testRPCURL)

    const invalidHumanReadableString1 = 'brandonbrandon.klayt'
    const invalidHumanReadableString2 = 'lum.klay'
    const invalidHumanReadableString3 = 'satoshi'

    expect(caver.utils.isHumanReadableString(invalidHumanReadableString1)).to.false
    expect(caver.utils.isHumanReadableString(invalidHumanReadableString2)).to.false
    expect(caver.utils.isHumanReadableString(invalidHumanReadableString3)).to.false
  })
  
  it('Should return false if the argument is hex address', () => {
    var Caver = require('../index.js')
    const caver = new Caver(testRPCURL)

    const { address: invalidHumanReadableString1 } = caver.klay.accounts.create()
    const { address: invalidHumanReadableString2 } = caver.klay.accounts.create()
    const { address: invalidHumanReadableString3 } = caver.klay.accounts.create()

    expect(caver.utils.isHumanReadableString(invalidHumanReadableString1)).to.false
    expect(caver.utils.isHumanReadableString(invalidHumanReadableString2)).to.false
    expect(caver.utils.isHumanReadableString(invalidHumanReadableString3)).to.false
  })
})
